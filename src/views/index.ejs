<!DOCTYPE html>
<html>

<head>
  <title>Network Devices Scanner</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" type="text/css" href="css/style.css">
</head>

<body onload="getDevices()">
  <main id="main-container" class="loading">
    
    <div class="show-loading">Loading...</div>

    <div class="container">
      <h2 class="table-title">Active Devices <button class="btn btn-info" onclick="getDevices()">Refresh</button></h2>
      <div class="table-container">
      <table  >
        <thead>
          <tr>
            <th>Ip</th>
            <th>Mac Address</th>
          </tr>
        </thead>
        <tbody id="devices"></tbody>
      </table>
    </div>
    </div>
  </main>
</body>
<script>
  const baseUrl = "<%= baseUrl %>"
  const getDevices = async () => {
    const container = document.getElementById("main-container");
    container.classList.add("loading")
    const response = await fetch(baseUrl + "/update")
      .then((response) => response.json())
      .then((data) => data);
      container.classList.remove("loading")
    return renderDevices(response);
  };
  const renderDevices = (response) => {
    const devicesList = document.getElementById("devices");
    // Remove the old devices when refresh
    while (devicesList.firstChild) {
      devicesList.removeChild(devicesList.firstChild);
    }
    // Adding new devices
    response.map((device) => {
      let tr = document.createElement("tr");
      let deviceIp = document.createElement("td");
      deviceIp.innerHTML = device.ip;
      tr.appendChild(deviceIp);

      let deviceMac = document.createElement("td");
      deviceMac.innerHTML = device.mac;
      tr.appendChild(deviceMac);
      return devicesList.appendChild(tr);
    });
  };
</script>

</html>